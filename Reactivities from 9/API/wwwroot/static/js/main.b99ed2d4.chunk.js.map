{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/form/MyDateInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetaledHeader.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileActitvities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","setImage","setDisplayName","name","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","p","activityStore","followingCount","loadFollowings","loadUserActivities","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","extra","Icon","styles","borderColor","borderWith","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","MyDateInput","selected","categoryOptions","useHistory","useParams","validationScheme","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","length","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","bio","isCurrentUser","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b99ed2d4.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { PaginatedResult } from \"../models/pagination\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        } else {\n          toast.error(data);\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorised\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post<void>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from './profile';\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key === \"startDate\") this.predicate.delete(key);\n      });\n    };\n\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n        break;\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some((a) => a.username === user.username);\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find((x) => x.username === activity.hostUsername);\n    }\n    activity.date = new Date(activity.date!); // activity.date.split('T')[0];\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = { ...this.getActivity(activity.id), ...activity };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (a) => a.username !== user?.username\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n}\n","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from './store';\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem('jwt');\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter((p) => p.id !== photo.id);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following ? profile.followersCount-- : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from 'react';\nimport ActivityStore from './activityStore';\nimport CommonStore from './commonStore';\nimport ModalStore from './modalStore';\nimport UserStore from './userStore';\nimport ProfileStore from './profileStore';\nimport CommentStore from './commentStore';\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from 'mobx';\nimport { ServerError } from '../models/serverError';\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem('jwt', token);\n        } else {\n          window.localStorage.removeItem('jwt');\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from 'mobx';\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection.start().catch((error) => console.log(\"Error establishing the connection: \", error));\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} exact to=\"/\" header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create Activity\" />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || '/assets/user.png'} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text=\"My Profile\" icon=\"user\" />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters() {\n\n    const {activityStore: {predicate,setPredicate}} = useStore();\n\n    return (\n        <>\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\n                <Header icon='filter' attached color='teal' content='Filters' />\n                <Menu.Item \n                content='All Activites'\n                active={predicate.has('all')}\n                onClick={()=> setPredicate('all','true')}\n                />\n                <Menu.Item \n                content=\"I'm going\" \n                active={predicate.has('isGoing')}\n                onClick={()=> setPredicate('isGoing','true')}\n                />\n                <Menu.Item \n                content=\"I'm hosting\" \n                active={predicate.has('isHost')}\n                onClick={()=> setPredicate('isHost','true')}\n                />\n            </Menu>\n            <Header />\n            <Calendar \n              onChange ={(date)=> setPredicate('startDate',date as Date)}\n              value = {predicate.get('startDate')|| new Date()}\n            />\n        </>\n    )\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: '100%' }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: '100%' }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? 'red' : 'green'}\r\n          content={profile.following ? 'Unfollow' : 'Follow'}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>Bio goes here</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWith: 3,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n              <Image size=\"mini\" circular src={attendee.image || '/assets/user.png'} bordered style={attendee.following ? styles : null} />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{ textAlign: 'center' }} />}\n        <Item.Group>\n          <Item>\n            <Item.Image style={{ marginBottom: 3 }} size=\"tiny\" circular src={activity.host?.image || '/assets/user.png'} />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by <Link to={`/profiles/${activity.hostUsername}`}> {activity.host?.displayName}</Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button as={Link} to={`/activities/${activity.id}`} color=\"teal\" floated=\"right\" content=\"View\" />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n    const { activityStore } = useStore();\n    const { groupedActivities } = activityStore;\n\n    return (\n        <>\n            {groupedActivities.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color='teal'>\n                        {group}\n                    </Header>\n                    {activities.map(activity => (\n                        <ActivityListItem key={activity.id} activity={activity} />\n                    ))}\n                </Fragment>\n            ))}\n        </>\n\n    )\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { PagingParams } from '../../../app/models/pagination';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilters';\nimport ActivityList from './ActivityList';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry,setPagingParams,pagination } = activityStore;\n  const [loadingNext,setLoadingNext] =useState(false); \n\nfunction handleGetNext(){\n  setLoadingNext(true);\n  setPagingParams(new PagingParams(pagination!.currentPage+1));\n  loadActivities().then(()=>{\n    setLoadingNext(false);\n  })\n}\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  //if (activityStore.loadingInitial && !loadingNext) return <LoadingComponent content=\"Loading activities...\" />;\n\n  return (\n    <Grid>\n        <Grid.Column width='10'>\n            {activityStore.loadingInitial && !loadingNext ? (\n                <>\n                    <ActivityListItemPlaceholder />\n                    <ActivityListItemPlaceholder />\n                </>\n            ) : (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={handleGetNext}\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n                        initialLoad={false}\n                    >\n                        <ActivityList />\n                    </InfiniteScroll>\n                )}\n        </Grid.Column>\n        <Grid.Column width='6'>\n            <ActivityFilters />\n        </Grid.Column>\n        <Grid.Column width={10}>\n            <Loader active={loadingNext} />\n        </Grid.Column>\n    </Grid>\n)\n})\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { Label, Form } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) => userStore.login(values).catch((error) => setErrors({ error: 'Invalid email or password' }))}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Login to Reactivites\" color=\"teal\" textAlign=\"center\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage name=\"error\" render={() => <Label style={{ marginBottom: 10 }} basic color=\"red\" content={errors.error} />} />\r\n          <Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) => userStore.register(values).catch((error) => setErrors({ error }))}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Sign up to Reactivites\" color=\"teal\" textAlign=\"center\" />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage name=\"error\" render={() => <ValidationErrors errors={errors.error} />} />\r\n          <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content=\"Register\" type=\"submit\" fluid />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image size=\"massive\" src=\"/assets/logo.png\" alt=\"logo\" style={{ marginBottom: 12 }} />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\n              Login!\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    )\n}","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { Label, Form } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker {...field} {...props} selected={(field.value && new Date(field.value)) || null} onChange={(value) => helpers.setValue(value)} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport { v4 as uuid } from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport { ActivityFormValues } from '../../../app/models/activity';\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationScheme = Yup.object({\n    title: Yup.string().required('Activity title is required'),\n    description: Yup.string().required('Activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    } else {\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\n    }\n  }\n  /*\n    function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const {name, value} = event.target;\n        setActivity({...activity, [name]: value})\n    }\n    */\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik validationSchema={validationScheme} enableReinitialize initialValues={activity} onSubmit={(values) => handleFormSubmit(values)}>\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput options={categoryOptions} placeholder=\"Category\" name=\"category\" />\n            <MyDateInput placeholderText=\"Date\" name=\"date\" showTimeSelect timeCaption=\"time\" dateFormat=\"MMMM d, yyyy h:mm aa\" />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button disabled={isSubmitting || !dirty || !isValid} loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\" />\n            <Button as={Link} to=\"/activities\" floated=\"right\" type=\"button\" content=\"Cancel\" />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: 'none' }}>\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\n          initialValues={{ body: '' }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: 'relative' }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter' && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === 'Enter' && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from 'react';\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Activity } from '../../../app/models/activity';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment textAlign=\"center\" style={{ border: 'none' }} attached=\"top\" secondary inverted color=\"teal\">\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label style={{ position: 'absolute' }} color=\"orange\" ribbon=\"right\">\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                {attendee.following && <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)',\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white',\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: '0' }}>\n        {activity.isCancelled && <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }} ribbon color=\"red\" content=\"Cancelled\" />}\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header size=\"huge\" content={activity.title} style={{ color: 'white' }} />\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by{' '}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? 'green' : 'red'}\n              floated=\"left\"\n              basic\n              content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button as={Link} disabled={activity.isCancelled} to={`/manage/${activity.id}`} color=\"orange\" floated=\"right\">\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button disabled={activity.isCancelled} loading={loading} onClick={updateAttendance} color=\"teal\">\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\nimport ActivityDetailedHeader from './ActivityDetaledHeader';\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const { selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n    const baseUrl =  process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors &&\n                <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError() {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details &&\n                <Segment>\n                    <Header as='h4' content='Stack trace' color='teal' />\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n                </Segment>\n                \n            }\n        </Container>\n    )\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button } from 'semantic-ui-react';\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button positive type=\"submit\" loading={isSubmitting} content=\"Update profile\" floated=\"right\" disabled={!isValid || !dirty} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport ProfileEditForm from './ProfileEditForm';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header floated=\"left\" icon=\"user\" content={`About ${profile?.displayName}`} />\r\n          {isCurrentUser && <Button floated=\"right\" basic content={editMode ? 'Cancel' : 'Edit Profile'} onClick={() => setEditMode(!editMode)} />}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\r\nimport ProfileCard from './ProfileCard';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={activeTab === 3 ? `People following ${profile!.displayName}` : `People ${profile?.displayName} is following`}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ imagePreview, setCropper }: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div className=\"img-preview\" style={{ minHeight: 200, overflow: 'hidden' }} />\r\n            <Button.Group widths={2}>\r\n              <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\r\n              <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button floated=\"right\" basic content={addPhotoMode ? 'Cancel' : 'Add Photo'} onClick={() => setAddPhotoMode(!addPhotoMode)} />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={'main' + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === 'main' + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\nimport ProfileActivities from './ProfileActitvities'; \r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: 'About', render: () => <ProfileAbout /> },\r\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: 'Events', render: () =>< ProfileActivities /> },\r\n    { menuItem: 'Followers', render: () => <ProfileFollowings /> },\r\n    { menuItem: 'Following', render: () => <ProfileFollowings /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size=\"small\" src={profile.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute'; \n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />            \n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}